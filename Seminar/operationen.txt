   
    	
tree suchen(key i, tree s) { 
    tree x = splay(i, s); 
    if (x.key == i)  
	return x;  
    return null;	
}

tree einfügen(key i, tree s) { 
    tree x = splay(i, s); 
    if (x.key == i)  
	return s; 
    tree y = new Node(i);
    if (i < x.key )
        y.right = s;
        y.left = s.left;
        return y;
    y.left = s;
    y.right = s.right;
    return y;
}

tree vereinigen (tree s1, tree s2){
    x = splay(KeyMax, s1);
    x.right = s2;
    return x;
}
tree vereinigen (tree s1, key i, tree s2){ 
    x = new Node(i);
    x.left = s1;
    x.right = s2;
    return x;
}

tree löschen (key i, tree s){
    
    x = splay(key, s);
    if x.key != i
        return x;
    l = x.left;
    r = x.right;
    x.dispose;
   return vereinigen (l, r);
}

tree, tree aufteilen (key i, tree s){
    x = splay(i, s);
    y = x.left;
    z = x.right;
    dispose(x);
    return y, z;
            
}